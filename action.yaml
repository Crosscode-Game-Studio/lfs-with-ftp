name: ftp-with-lfs
description: Load everything with LFS over FTP
inputs:
  ftp-user:
    description: "Your FTP user"
    required: true
  ftp-password:
    description: "Your FTP password"
    required: true
  ftp-host:
    description: "Your FTP host"
    required: true
  cache:
    description: "Enable caching for your LFS files"
    default: "true"
    required: false

runs:
  using: composite
  steps:
    - name: Setup path for bin
      run: echo "${{ github.action_path }}/bin" >> $GITHUB_PATH
      shell: bash
        
    - name: Install rclone
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: rclone
        version: 1.0

    - name: Mount folder
      shell: bash
      run: |
        mkdir $HOME/lfs
        pass=`rclone obscure ${{ inputs.ftp-password }}`
        echo "[remote]" > rclone_temp.conf
        echo "type = ftp" >> rclone_temp.conf
        echo "host = ${{ inputs.ftp-host }}" >> rclone_temp.conf
        echo "user = ${{ inputs.ftp-user }}" >> rclone_temp.conf
        echo "pass = ${pass}" >> rclone_temp.conf
        echo "tls = false" >> rclone_temp.conf
        echo "explicit_tls = false" >> rclone_temp.conf
        rclone mount --config ./rclone_temp.conf remote: $HOME/lfs &

    - name: Config LFS provider
      shell: bash
      run: |
        git config --add lfs.customtransfer.lfs-folder.path lfs-folderstore
        git config --add lfs.customtransfer.lfs-folder.args "$HOME/lfs"
        git config --add lfs.standalonetransferagent lfs-folder

    - name: Create LFS file list
      if: ${{ inputs.cache == 'true' }}
      shell: bash
      run: git lfs ls-files --long | cut -d ' ' -f1 | sort > .lfs-assets-id

    - name: LFS Cache
      if: ${{ inputs.cache == 'true' }}
      uses: actions/cache@v3
      with:
        path: .git/lfs/objects
        key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
        restore-keys: |
          ${{ runner.os }}-lfs-

    - name: Git LFS Pull
      shell: bash
      run: git lfs pull
